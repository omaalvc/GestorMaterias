// <auto-generated />
using System;
using GestorMaterias.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorMaterias.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestorMaterias.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("GestorMaterias.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Creditos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creditos = 3,
                            Descripcion = "Fundamentos de cálculo y álgebra",
                            Nombre = "Matemáticas I",
                            ProfesorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Creditos = 3,
                            Descripcion = "Principios fundamentales de la física",
                            Nombre = "Física Básica",
                            ProfesorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Creditos = 3,
                            Descripcion = "Introducción a la programación",
                            Nombre = "Programación I",
                            ProfesorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Creditos = 3,
                            Descripcion = "Diseño y administración de bases de datos",
                            Nombre = "Base de Datos",
                            ProfesorId = 2
                        },
                        new
                        {
                            Id = 5,
                            Creditos = 3,
                            Descripcion = "Inglés aplicado a contextos técnicos",
                            Nombre = "Inglés Técnico",
                            ProfesorId = 3
                        },
                        new
                        {
                            Id = 6,
                            Creditos = 3,
                            Descripcion = "Habilidades de comunicación profesional",
                            Nombre = "Comunicación Efectiva",
                            ProfesorId = 3
                        },
                        new
                        {
                            Id = 7,
                            Creditos = 3,
                            Descripcion = "Fundamentos de sistemas operativos",
                            Nombre = "Sistemas Operativos",
                            ProfesorId = 4
                        },
                        new
                        {
                            Id = 8,
                            Creditos = 3,
                            Descripcion = "Principios de redes y comunicaciones",
                            Nombre = "Redes de Computadores",
                            ProfesorId = 4
                        },
                        new
                        {
                            Id = 9,
                            Creditos = 3,
                            Descripcion = "Metodologías de desarrollo de software",
                            Nombre = "Ingeniería de Software",
                            ProfesorId = 5
                        },
                        new
                        {
                            Id = 10,
                            Creditos = 3,
                            Descripcion = "Fundamentos de IA y machine learning",
                            Nombre = "Inteligencia Artificial",
                            ProfesorId = 5
                        });
                });

            modelBuilder.Entity("GestorMaterias.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "juan.perez@universidad.edu",
                            Nombre = "Juan Pérez"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maria.gonzalez@universidad.edu",
                            Nombre = "María González"
                        },
                        new
                        {
                            Id = 3,
                            Email = "carlos.rodriguez@universidad.edu",
                            Nombre = "Carlos Rodríguez"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ana.martinez@universidad.edu",
                            Nombre = "Ana Martínez"
                        },
                        new
                        {
                            Id = 5,
                            Email = "luis.sanchez@universidad.edu",
                            Nombre = "Luis Sánchez"
                        });
                });

            modelBuilder.Entity("GestorMaterias.Models.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.HasIndex("EstudianteId", "MateriaId")
                        .IsUnique();

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("GestorMaterias.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<int?>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EstudianteId")
                        .IsUnique()
                        .HasFilter("[EstudianteId] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gestormaterias.com",
                            EsAdministrador = true,
                            FechaRegistro = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NombreCompleto = "Administrador del Sistema",
                            Password = "admin123",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("GestorMaterias.Models.Materia", b =>
                {
                    b.HasOne("GestorMaterias.Models.Profesor", "Profesor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("GestorMaterias.Models.Registro", b =>
                {
                    b.HasOne("GestorMaterias.Models.Estudiante", "Estudiante")
                        .WithMany("Registros")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorMaterias.Models.Materia", "Materia")
                        .WithMany("Registros")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("GestorMaterias.Models.Usuario", b =>
                {
                    b.HasOne("GestorMaterias.Models.Estudiante", "Estudiante")
                        .WithOne()
                        .HasForeignKey("GestorMaterias.Models.Usuario", "EstudianteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("GestorMaterias.Models.Estudiante", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("GestorMaterias.Models.Materia", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("GestorMaterias.Models.Profesor", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
